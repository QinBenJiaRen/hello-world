提交项目
跟踪项目文件夹中的所有文件和文件夹
git add .
输入本次的提交说明，准备提交暂存区中的更改的已跟踪文件，单引号内为说明内容
$ git commit -m 'first_commit'
关联远程仓库，添加后，远程库的名字就是 origin，这是 Git 默认的叫法，也可以改成别的，但是 origin 这个名字一看就知道是远程库。
$ git remote add origin https://github.com/qinbenjiaren/BigDataAna.git
如果关联出现错误 fatal: remote origin already exists，则执行下列语句再进行关联
git remote rm origin
把本地库的所有内容推送到远程库上
$ git push -u origin master
如果在推送时出现错误 error:failed to push som refs to.......，则执行下列语句
git pull origin master

git fatal: 拒绝合并无关的历史的错误解决
$ git pull origin master --allow-unrelated-histories

Git错误non-fast-forward后的冲突解决
当要push代码到git时，出现提示：

error:failed to push some refs to ...

Dealing with “non-fast-forward” errors
From time to time you may encounter this error while pushing:
$ git push origin master  
To ../remote/  
 ! [rejected]        master -> master (non-fast forward)  
error: failed to push some refs to '../remote/'  
问题（Non-fast-forward）的出现原因在于：git仓库中已经有一部分代码，所以它不允许你直接把你的代码覆盖上去。于是你有2个选择方式：

1，强推，即利用强覆盖方式用你本地的代码替代git仓库内的内容

git push -f

2，先把git的东西fetch到你本地然后merge后再push

$ git fetch

$ git merge

这2句命令等价于
$ git pull  
上面出现的 [branch "master"]是需要明确(.git/config)如下的内容
[branch "master"]
    remote = origin
    merge = refs/heads/master

这等于告诉git2件事:
1，当你处于master branch, 默认的remote就是origin。

2，当你在master branch上使用git pull时，没有指定remote和branch，那么git就会采用默认的remote（也就是origin）来merge在master branch上所有的改变
如果不想或者不会编辑config文件的话，可以在bush上输入如下命令行：

$ git config branch.master.remote origin  
$ git config branch.master.merge refs/heads/master  
之后再重新git pull下。最后git push你的代码吧。it works now~
